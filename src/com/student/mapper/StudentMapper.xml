<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.student.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.student.pojo.Student" >
    <id column="student_id" property="studentId" jdbcType="BIGINT" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="student_tel" property="studentTel" jdbcType="VARCHAR" />
    <result column="student_password" property="studentPassword" jdbcType="VARCHAR" />
    <result column="student_intrest" property="studentIntrest" jdbcType="VARCHAR" />
    <result column="student_email" property="studentEmail" jdbcType="VARCHAR" />
    <result column="student_state" property="studentState" jdbcType="BIT" />
    <result column="student_img" property="studentImg" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    student_id, student_name, student_tel, student_password, student_intrest, student_email, 
    student_state, student_img
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.student.pojo.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    limit #{index},#{pageSize}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from student
    where student_id = #{studentId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.student.pojo.StudentExample" >
    delete from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.student.pojo.Student" >
    insert into student (student_id, student_name, student_tel, 
      student_password, student_intrest, student_email, 
      student_state, student_img)
    values (#{studentId,jdbcType=BIGINT}, #{studentName,jdbcType=VARCHAR}, #{studentTel,jdbcType=VARCHAR}, 
      #{studentPassword,jdbcType=VARCHAR}, #{studentIntrest,jdbcType=VARCHAR}, #{studentEmail,jdbcType=VARCHAR}, 
      #{studentState,jdbcType=BIT}, #{studentImg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.student.pojo.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="studentTel != null" >
        student_tel,
      </if>
      <if test="studentPassword != null" >
        student_password,
      </if>
      <if test="studentIntrest != null" >
        student_intrest,
      </if>
      <if test="studentEmail != null" >
        student_email,
      </if>
      <if test="studentState != null" >
        student_state,
      </if>
      <if test="studentImg != null" >
        student_img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentTel != null" >
        #{studentTel,jdbcType=VARCHAR},
      </if>
      <if test="studentPassword != null" >
        #{studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="studentIntrest != null" >
        #{studentIntrest,jdbcType=VARCHAR},
      </if>
      <if test="studentEmail != null" >
        #{studentEmail,jdbcType=VARCHAR},
      </if>
      <if test="studentState != null" >
        #{studentState,jdbcType=BIT},
      </if>
      <if test="studentImg != null" >
        #{studentImg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.student.pojo.StudentExample" resultType="java.lang.Integer" >
    select count(*) from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student
    <set >
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=BIGINT},
      </if>
      <if test="record.studentName != null" >
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentTel != null" >
        student_tel = #{record.studentTel,jdbcType=VARCHAR},
      </if>
      <if test="record.studentPassword != null" >
        student_password = #{record.studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.studentIntrest != null" >
        student_intrest = #{record.studentIntrest,jdbcType=VARCHAR},
      </if>
      <if test="record.studentEmail != null" >
        student_email = #{record.studentEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.studentState != null" >
        student_state = #{record.studentState,jdbcType=BIT},
      </if>
      <if test="record.studentImg != null" >
        student_img = #{record.studentImg,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student
    set student_id = #{record.studentId,jdbcType=BIGINT},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      student_tel = #{record.studentTel,jdbcType=VARCHAR},
      student_password = #{record.studentPassword,jdbcType=VARCHAR},
      student_intrest = #{record.studentIntrest,jdbcType=VARCHAR},
      student_email = #{record.studentEmail,jdbcType=VARCHAR},
      student_state = #{record.studentState,jdbcType=BIT},
      student_img = #{record.studentImg,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.student.pojo.Student" >
    update student
    <set >
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentTel != null" >
        student_tel = #{studentTel,jdbcType=VARCHAR},
      </if>
      <if test="studentPassword != null" >
        student_password = #{studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="studentIntrest != null" >
        student_intrest = #{studentIntrest,jdbcType=VARCHAR},
      </if>
      <if test="studentEmail != null" >
        student_email = #{studentEmail,jdbcType=VARCHAR},
      </if>
      <if test="studentState != null" >
        student_state = #{studentState,jdbcType=BIT},
      </if>
      <if test="studentImg != null" >
        student_img = #{studentImg,jdbcType=VARCHAR},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.student.pojo.Student" >
    update student
    set student_name = #{studentName,jdbcType=VARCHAR},
      student_tel = #{studentTel,jdbcType=VARCHAR},
      student_password = #{studentPassword,jdbcType=VARCHAR},
      student_intrest = #{studentIntrest,jdbcType=VARCHAR},
      student_email = #{studentEmail,jdbcType=VARCHAR},
      student_state = #{studentState,jdbcType=BIT},
      student_img = #{studentImg,jdbcType=VARCHAR}
    where student_id = #{studentId,jdbcType=BIGINT}
  </update>
</mapper>